// Generated by CoffeeScript 1.9.3
(function() {
  var UserSchema, mongoose;

  mongoose = require("mongoose");

  UserSchema = new mongoose.Schema({
    name: {
      unique: true,
      type: String
    },
    password: String,
    role: {
      type: Number,
      "default": 11
    },
    meta: {
      createAt: {
        type: Date,
        "default": Date.now()
      },
      updateAt: {
        type: Date,
        "default": Date.now()
      }
    }
  });

  UserSchema.pre('save', function(next) {
    if (this.isNew) {
      this.meta.createAt = this.meta.updateAt = Date.now();
    } else {
      this.meta.createAt = Date.now();
    }
    return next();
  });


  /*
    bcrypt.genSalt SALT_WORK_FACTOR, (err, salt) ->
      if err
        next err
      bcrypt.hash @password, salt, (err,hash) ->
        if err
          next err
  
        @password = hash
        next()
   */

  UserSchema.statics = {
    fetch: function(cb) {
      return this.find({}).sort('meta.updateAt').exec(cb);
    },
    findById: function(id, cb) {
      return this.findOne({
        _id: id
      }).exec(cb);
    }
  };

  module.exports = UserSchema;

}).call(this);

//# sourceMappingURL=user.js.map
