// Generated by CoffeeScript 1.9.3
(function() {
  var MovieSchema, ObjectId, Schema, mongoose;

  mongoose = require("mongoose");

  Schema = mongoose.Schema;

  ObjectId = Schema.Types.ObjectId;

  MovieSchema = new Schema({
    director: String,
    title: String,
    language: String,
    country: String,
    summary: String,
    flash: String,
    poster: String,
    flash: String,
    year: Number,
    pv: {
      type: Number,
      "default": 0
    },
    category: {
      type: ObjectId,
      ref: 'Category'
    },
    meta: {
      createAt: {
        type: Date,
        "default": Date.now()
      },
      updateAt: {
        type: Date,
        "default": Date.now()
      }
    }
  });

  MovieSchema.pre('save', function(next) {
    if (this.isNew) {
      this.meta.createAt = this.meta.updateAt = Date.now();
    } else {
      this.meta.createAt = Date.now();
    }
    return next();
  });

  MovieSchema.statics = {
    fetch: function(cb) {
      return this.find({}).sort('meta.updateAt').exec(cb);
    },
    findById: function(id, cb) {
      return this.findOne({
        _id: id
      }).exec(cb);
    }
  };

  module.exports = MovieSchema;

}).call(this);

//# sourceMappingURL=movie.js.map
